/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* eslint-disable spellcheck/spell-checker */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable prettier/prettier */

// Generated from SmartRule.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import type {
	ATN,
	CharStream,
	DecisionState } from 'antlr4';
import {
	ATNDeserializer, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token,
} from 'antlr4';
export default class SmartRuleLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly OBJECTTYPE = 29;
	public static readonly AT = 30;
	public static readonly AND = 31;
	public static readonly EVERY = 32;
	public static readonly FROM = 33;
	public static readonly ON = 34;
	public static readonly ONCE = 35;
	public static readonly OR = 36;
	public static readonly NOW = 37;
	public static readonly NOT = 38;
	public static readonly TO = 39;
	public static readonly WITH = 40;
	public static readonly MATCHES = 41;
	public static readonly FILECREATE = 42;
	public static readonly FILECLOSE = 43;
	public static readonly FILEAPPEND = 44;
	public static readonly FILERENAME = 45;
	public static readonly FILEMETADATA = 46;
	public static readonly FILEUNLINK = 47;
	public static readonly FILETRUNCATE = 48;
	public static readonly TIMEINTVALCONST = 49;
	public static readonly TIMEPOINTCONST = 50;
	public static readonly ID = 51;
	public static readonly Linecomment = 52;
	public static readonly WS = 53;
	public static readonly STRING = 54;
	public static readonly LONG = 55;
	public static readonly NEWLINE = 56;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ 'DEFAULT_TOKEN_CHANNEL', 'HIDDEN' ];
	public static readonly literalNames: (string | null)[] = [ null, '\':\'', 
                                                            '\'|\'', '\'/\'', 
                                                            '\'(\'', '\')\'', 
                                                            '\'==\'', '\'!=\'', 
                                                            '\'-\'', '\'+\'', 
                                                            '\'*\'', '\'%\'', 
                                                            '\';\'', '\'@\'', 
                                                            '\'$\'', '\'&\'', 
                                                            '\'=\'', '\'{\'', 
                                                            '\'}\'', '\'[\'', 
                                                            '\']\'', '\'"\'', 
                                                            '\'?\'', '\'.\'', 
                                                            '\',\'', '\'>\'', 
                                                            '\'<\'', '\'>=\'', 
                                                            '\'<=\'', null, 
                                                            '\'at\'', '\'and\'', 
                                                            '\'every\'', '\'from\'', 
                                                            '\'on\'', '\'once\'', 
                                                            '\'or\'', '\'now\'', 
                                                            '\'not\'', '\'to\'', 
                                                            '\'with\'', '\'matches\'', 
                                                            '\'FileCreate\'', 
                                                            '\'FileClose\'', 
                                                            '\'FileAppend\'', 
                                                            '\'FileRename\'', 
                                                            '\'FileMetadate\'', 
                                                            '\'FileUnlink\'', 
                                                            '\'FileTruncate\'' ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, 'OBJECTTYPE', 
                                                             'AT', 'AND', 
                                                             'EVERY', 'FROM', 
                                                             'ON', 'ONCE', 
                                                             'OR', 'NOW', 
                                                             'NOT', 'TO', 
                                                             'WITH', 'MATCHES', 
                                                             'FILECREATE', 
                                                             'FILECLOSE', 
                                                             'FILEAPPEND', 
                                                             'FILERENAME', 
                                                             'FILEMETADATA', 
                                                             'FILEUNLINK', 
                                                             'FILETRUNCATE', 
                                                             'TIMEINTVALCONST', 
                                                             'TIMEPOINTCONST', 
                                                             'ID', 'Linecomment', 
                                                             'WS', 'STRING', 
                                                             'LONG', 'NEWLINE' ];
	public static readonly modeNames: string[] = [ 'DEFAULT_MODE' ];

	public static readonly ruleNames: string[] = [
		'T__0', 'T__1', 'T__2', 'T__3', 'T__4', 'T__5', 'T__6', 'T__7', 'T__8', 
		'T__9', 'T__10', 'T__11', 'T__12', 'T__13', 'T__14', 'T__15', 'T__16', 
		'T__17', 'T__18', 'T__19', 'T__20', 'T__21', 'T__22', 'T__23', 'T__24', 
		'T__25', 'T__26', 'T__27', 'OBJECTTYPE', 'AT', 'AND', 'EVERY', 'FROM', 
		'ON', 'ONCE', 'OR', 'NOW', 'NOT', 'TO', 'WITH', 'MATCHES', 'FILE', 'DIRECTORY', 
		'STORAGE', 'CACHE', 'FILECREATE', 'FILECLOSE', 'FILEAPPEND', 'FILERENAME', 
		'FILEMETADATA', 'FILEUNLINK', 'FILETRUNCATE', 'TIMEINTVALCONST', 'TIMEPOINTCONST', 
		'ID', 'Linecomment', 'WS', 'STRING', 'ESCAPE', 'UNICODE', 'HEX', 'LONG', 
		'NEWLINE',
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, SmartRuleLexer._ATN, SmartRuleLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return 'SmartRule.g4'; }

	public get literalNames(): (string | null)[] { return SmartRuleLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return SmartRuleLexer.symbolicNames; }
	public get ruleNames(): string[] { return SmartRuleLexer.ruleNames; }

	public get serializedATN(): number[] { return SmartRuleLexer._serializedATN; }

	public get channelNames(): string[] { return SmartRuleLexer.channelNames; }

	public get modeNames(): string[] { return SmartRuleLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,56,488,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,
	1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,
	12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,
	1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,
	26,1,27,1,27,1,27,1,28,1,28,1,28,1,28,3,28,192,8,28,1,29,1,29,1,29,1,30,
	1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,
	33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,36,
	1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,
	40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,
	1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,
	44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,
	1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,
	47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,
	1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,
	49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
	1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,
	52,5,52,358,8,52,10,52,12,52,361,9,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,
	1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,3,52,379,8,52,4,52,381,8,52,
	11,52,12,52,382,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,
	1,53,4,53,397,8,53,11,53,12,53,398,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,
	53,1,53,1,53,1,54,1,54,5,54,413,8,54,10,54,12,54,416,9,54,1,55,1,55,5,55,
	420,8,55,10,55,12,55,423,9,55,1,55,3,55,426,8,55,1,55,1,55,1,55,1,55,1,
	56,4,56,433,8,56,11,56,12,56,434,1,56,1,56,1,57,1,57,1,57,5,57,442,8,57,
	10,57,12,57,445,9,57,1,57,1,57,1,58,1,58,1,58,3,58,452,8,58,1,59,1,59,1,
	59,1,59,1,59,1,59,1,60,1,60,1,61,1,61,1,61,5,61,465,8,61,10,61,12,61,468,
	9,61,1,61,1,61,1,61,5,61,473,8,61,10,61,12,61,476,9,61,3,61,478,8,61,1,
	61,1,61,3,61,482,8,61,1,62,3,62,485,8,62,1,62,1,62,1,421,0,63,1,1,3,2,5,
	3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
	33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
	57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
	81,41,83,0,85,0,87,0,89,0,91,42,93,43,95,44,97,45,99,46,101,47,103,48,105,
	49,107,50,109,51,111,52,113,53,115,54,117,0,119,0,121,0,123,55,125,56,1,
	0,11,1,0,49,57,1,0,48,57,4,0,100,100,104,104,109,109,115,115,3,0,65,90,
	95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,2,0,34,34,
	92,92,8,0,34,34,47,47,92,92,98,98,102,102,110,110,114,114,116,116,3,0,48,
	57,65,70,97,102,10,0,71,71,75,75,77,77,80,80,84,84,103,103,107,107,109,
	109,112,112,116,116,2,0,66,66,98,98,504,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,
	0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
	1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
	0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
	1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
	0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
	1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
	0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,91,
	1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,
	0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,
	0,113,1,0,0,0,0,115,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,1,127,1,0,0,0,3,
	129,1,0,0,0,5,131,1,0,0,0,7,133,1,0,0,0,9,135,1,0,0,0,11,137,1,0,0,0,13,
	140,1,0,0,0,15,143,1,0,0,0,17,145,1,0,0,0,19,147,1,0,0,0,21,149,1,0,0,0,
	23,151,1,0,0,0,25,153,1,0,0,0,27,155,1,0,0,0,29,157,1,0,0,0,31,159,1,0,
	0,0,33,161,1,0,0,0,35,163,1,0,0,0,37,165,1,0,0,0,39,167,1,0,0,0,41,169,
	1,0,0,0,43,171,1,0,0,0,45,173,1,0,0,0,47,175,1,0,0,0,49,177,1,0,0,0,51,
	179,1,0,0,0,53,181,1,0,0,0,55,184,1,0,0,0,57,191,1,0,0,0,59,193,1,0,0,0,
	61,196,1,0,0,0,63,200,1,0,0,0,65,206,1,0,0,0,67,211,1,0,0,0,69,214,1,0,
	0,0,71,219,1,0,0,0,73,222,1,0,0,0,75,226,1,0,0,0,77,230,1,0,0,0,79,233,
	1,0,0,0,81,238,1,0,0,0,83,246,1,0,0,0,85,251,1,0,0,0,87,261,1,0,0,0,89,
	269,1,0,0,0,91,275,1,0,0,0,93,286,1,0,0,0,95,296,1,0,0,0,97,307,1,0,0,0,
	99,318,1,0,0,0,101,331,1,0,0,0,103,342,1,0,0,0,105,380,1,0,0,0,107,384,
	1,0,0,0,109,410,1,0,0,0,111,417,1,0,0,0,113,432,1,0,0,0,115,438,1,0,0,0,
	117,448,1,0,0,0,119,453,1,0,0,0,121,459,1,0,0,0,123,481,1,0,0,0,125,484,
	1,0,0,0,127,128,5,58,0,0,128,2,1,0,0,0,129,130,5,124,0,0,130,4,1,0,0,0,
	131,132,5,47,0,0,132,6,1,0,0,0,133,134,5,40,0,0,134,8,1,0,0,0,135,136,5,
	41,0,0,136,10,1,0,0,0,137,138,5,61,0,0,138,139,5,61,0,0,139,12,1,0,0,0,
	140,141,5,33,0,0,141,142,5,61,0,0,142,14,1,0,0,0,143,144,5,45,0,0,144,16,
	1,0,0,0,145,146,5,43,0,0,146,18,1,0,0,0,147,148,5,42,0,0,148,20,1,0,0,0,
	149,150,5,37,0,0,150,22,1,0,0,0,151,152,5,59,0,0,152,24,1,0,0,0,153,154,
	5,64,0,0,154,26,1,0,0,0,155,156,5,36,0,0,156,28,1,0,0,0,157,158,5,38,0,
	0,158,30,1,0,0,0,159,160,5,61,0,0,160,32,1,0,0,0,161,162,5,123,0,0,162,
	34,1,0,0,0,163,164,5,125,0,0,164,36,1,0,0,0,165,166,5,91,0,0,166,38,1,0,
	0,0,167,168,5,93,0,0,168,40,1,0,0,0,169,170,5,34,0,0,170,42,1,0,0,0,171,
	172,5,63,0,0,172,44,1,0,0,0,173,174,5,46,0,0,174,46,1,0,0,0,175,176,5,44,
	0,0,176,48,1,0,0,0,177,178,5,62,0,0,178,50,1,0,0,0,179,180,5,60,0,0,180,
	52,1,0,0,0,181,182,5,62,0,0,182,183,5,61,0,0,183,54,1,0,0,0,184,185,5,60,
	0,0,185,186,5,61,0,0,186,56,1,0,0,0,187,192,3,83,41,0,188,192,3,85,42,0,
	189,192,3,87,43,0,190,192,3,89,44,0,191,187,1,0,0,0,191,188,1,0,0,0,191,
	189,1,0,0,0,191,190,1,0,0,0,192,58,1,0,0,0,193,194,5,97,0,0,194,195,5,116,
	0,0,195,60,1,0,0,0,196,197,5,97,0,0,197,198,5,110,0,0,198,199,5,100,0,0,
	199,62,1,0,0,0,200,201,5,101,0,0,201,202,5,118,0,0,202,203,5,101,0,0,203,
	204,5,114,0,0,204,205,5,121,0,0,205,64,1,0,0,0,206,207,5,102,0,0,207,208,
	5,114,0,0,208,209,5,111,0,0,209,210,5,109,0,0,210,66,1,0,0,0,211,212,5,
	111,0,0,212,213,5,110,0,0,213,68,1,0,0,0,214,215,5,111,0,0,215,216,5,110,
	0,0,216,217,5,99,0,0,217,218,5,101,0,0,218,70,1,0,0,0,219,220,5,111,0,0,
	220,221,5,114,0,0,221,72,1,0,0,0,222,223,5,110,0,0,223,224,5,111,0,0,224,
	225,5,119,0,0,225,74,1,0,0,0,226,227,5,110,0,0,227,228,5,111,0,0,228,229,
	5,116,0,0,229,76,1,0,0,0,230,231,5,116,0,0,231,232,5,111,0,0,232,78,1,0,
	0,0,233,234,5,119,0,0,234,235,5,105,0,0,235,236,5,116,0,0,236,237,5,104,
	0,0,237,80,1,0,0,0,238,239,5,109,0,0,239,240,5,97,0,0,240,241,5,116,0,0,
	241,242,5,99,0,0,242,243,5,104,0,0,243,244,5,101,0,0,244,245,5,115,0,0,
	245,82,1,0,0,0,246,247,5,102,0,0,247,248,5,105,0,0,248,249,5,108,0,0,249,
	250,5,101,0,0,250,84,1,0,0,0,251,252,5,100,0,0,252,253,5,105,0,0,253,254,
	5,114,0,0,254,255,5,101,0,0,255,256,5,99,0,0,256,257,5,116,0,0,257,258,
	5,111,0,0,258,259,5,114,0,0,259,260,5,121,0,0,260,86,1,0,0,0,261,262,5,
	115,0,0,262,263,5,116,0,0,263,264,5,111,0,0,264,265,5,114,0,0,265,266,5,
	97,0,0,266,267,5,103,0,0,267,268,5,101,0,0,268,88,1,0,0,0,269,270,5,99,
	0,0,270,271,5,97,0,0,271,272,5,99,0,0,272,273,5,104,0,0,273,274,5,101,0,
	0,274,90,1,0,0,0,275,276,5,70,0,0,276,277,5,105,0,0,277,278,5,108,0,0,278,
	279,5,101,0,0,279,280,5,67,0,0,280,281,5,114,0,0,281,282,5,101,0,0,282,
	283,5,97,0,0,283,284,5,116,0,0,284,285,5,101,0,0,285,92,1,0,0,0,286,287,
	5,70,0,0,287,288,5,105,0,0,288,289,5,108,0,0,289,290,5,101,0,0,290,291,
	5,67,0,0,291,292,5,108,0,0,292,293,5,111,0,0,293,294,5,115,0,0,294,295,
	5,101,0,0,295,94,1,0,0,0,296,297,5,70,0,0,297,298,5,105,0,0,298,299,5,108,
	0,0,299,300,5,101,0,0,300,301,5,65,0,0,301,302,5,112,0,0,302,303,5,112,
	0,0,303,304,5,101,0,0,304,305,5,110,0,0,305,306,5,100,0,0,306,96,1,0,0,
	0,307,308,5,70,0,0,308,309,5,105,0,0,309,310,5,108,0,0,310,311,5,101,0,
	0,311,312,5,82,0,0,312,313,5,101,0,0,313,314,5,110,0,0,314,315,5,97,0,0,
	315,316,5,109,0,0,316,317,5,101,0,0,317,98,1,0,0,0,318,319,5,70,0,0,319,
	320,5,105,0,0,320,321,5,108,0,0,321,322,5,101,0,0,322,323,5,77,0,0,323,
	324,5,101,0,0,324,325,5,116,0,0,325,326,5,97,0,0,326,327,5,100,0,0,327,
	328,5,97,0,0,328,329,5,116,0,0,329,330,5,101,0,0,330,100,1,0,0,0,331,332,
	5,70,0,0,332,333,5,105,0,0,333,334,5,108,0,0,334,335,5,101,0,0,335,336,
	5,85,0,0,336,337,5,110,0,0,337,338,5,108,0,0,338,339,5,105,0,0,339,340,
	5,110,0,0,340,341,5,107,0,0,341,102,1,0,0,0,342,343,5,70,0,0,343,344,5,
	105,0,0,344,345,5,108,0,0,345,346,5,101,0,0,346,347,5,84,0,0,347,348,5,
	114,0,0,348,349,5,117,0,0,349,350,5,110,0,0,350,351,5,99,0,0,351,352,5,
	97,0,0,352,353,5,116,0,0,353,354,5,101,0,0,354,104,1,0,0,0,355,359,7,0,
	0,0,356,358,7,1,0,0,357,356,1,0,0,0,358,361,1,0,0,0,359,357,1,0,0,0,359,
	360,1,0,0,0,360,378,1,0,0,0,361,359,1,0,0,0,362,363,5,109,0,0,363,379,5,
	115,0,0,364,379,7,2,0,0,365,366,5,115,0,0,366,367,5,101,0,0,367,379,5,99,
	0,0,368,369,5,109,0,0,369,370,5,105,0,0,370,379,5,110,0,0,371,372,5,104,
	0,0,372,373,5,111,0,0,373,374,5,117,0,0,374,379,5,114,0,0,375,376,5,100,
	0,0,376,377,5,97,0,0,377,379,5,121,0,0,378,362,1,0,0,0,378,364,1,0,0,0,
	378,365,1,0,0,0,378,368,1,0,0,0,378,371,1,0,0,0,378,375,1,0,0,0,379,381,
	1,0,0,0,380,355,1,0,0,0,381,382,1,0,0,0,382,380,1,0,0,0,382,383,1,0,0,0,
	383,106,1,0,0,0,384,385,5,34,0,0,385,386,7,0,0,0,386,387,7,1,0,0,387,388,
	7,1,0,0,388,389,7,1,0,0,389,390,5,45,0,0,390,391,7,1,0,0,391,392,7,1,0,
	0,392,393,5,45,0,0,393,394,7,1,0,0,394,396,7,1,0,0,395,397,5,32,0,0,396,
	395,1,0,0,0,397,398,1,0,0,0,398,396,1,0,0,0,398,399,1,0,0,0,399,400,1,0,
	0,0,400,401,7,1,0,0,401,402,7,1,0,0,402,403,5,58,0,0,403,404,7,1,0,0,404,
	405,7,1,0,0,405,406,5,58,0,0,406,407,7,1,0,0,407,408,7,1,0,0,408,409,5,
	34,0,0,409,108,1,0,0,0,410,414,7,3,0,0,411,413,7,4,0,0,412,411,1,0,0,0,
	413,416,1,0,0,0,414,412,1,0,0,0,414,415,1,0,0,0,415,110,1,0,0,0,416,414,
	1,0,0,0,417,421,5,35,0,0,418,420,9,0,0,0,419,418,1,0,0,0,420,423,1,0,0,
	0,421,422,1,0,0,0,421,419,1,0,0,0,422,425,1,0,0,0,423,421,1,0,0,0,424,426,
	5,13,0,0,425,424,1,0,0,0,425,426,1,0,0,0,426,427,1,0,0,0,427,428,5,10,0,
	0,428,429,1,0,0,0,429,430,6,55,0,0,430,112,1,0,0,0,431,433,7,5,0,0,432,
	431,1,0,0,0,433,434,1,0,0,0,434,432,1,0,0,0,434,435,1,0,0,0,435,436,1,0,
	0,0,436,437,6,56,0,0,437,114,1,0,0,0,438,443,5,34,0,0,439,442,3,117,58,
	0,440,442,8,6,0,0,441,439,1,0,0,0,441,440,1,0,0,0,442,445,1,0,0,0,443,441,
	1,0,0,0,443,444,1,0,0,0,444,446,1,0,0,0,445,443,1,0,0,0,446,447,5,34,0,
	0,447,116,1,0,0,0,448,451,5,92,0,0,449,452,7,7,0,0,450,452,3,119,59,0,451,
	449,1,0,0,0,451,450,1,0,0,0,452,118,1,0,0,0,453,454,5,117,0,0,454,455,3,
	121,60,0,455,456,3,121,60,0,456,457,3,121,60,0,457,458,3,121,60,0,458,120,
	1,0,0,0,459,460,7,8,0,0,460,122,1,0,0,0,461,482,5,48,0,0,462,466,7,0,0,
	0,463,465,7,1,0,0,464,463,1,0,0,0,465,468,1,0,0,0,466,464,1,0,0,0,466,467,
	1,0,0,0,467,482,1,0,0,0,468,466,1,0,0,0,469,478,5,48,0,0,470,474,7,0,0,
	0,471,473,7,1,0,0,472,471,1,0,0,0,473,476,1,0,0,0,474,472,1,0,0,0,474,475,
	1,0,0,0,475,478,1,0,0,0,476,474,1,0,0,0,477,469,1,0,0,0,477,470,1,0,0,0,
	478,479,1,0,0,0,479,480,7,9,0,0,480,482,7,10,0,0,481,461,1,0,0,0,481,462,
	1,0,0,0,481,477,1,0,0,0,482,124,1,0,0,0,483,485,5,13,0,0,484,483,1,0,0,
	0,484,485,1,0,0,0,485,486,1,0,0,0,486,487,5,10,0,0,487,126,1,0,0,0,18,0,
	191,359,378,382,398,414,421,425,434,441,443,451,466,474,477,481,484,1,6,
	0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!SmartRuleLexer.__ATN) {
			SmartRuleLexer.__ATN = new ATNDeserializer().deserialize(SmartRuleLexer._serializedATN);
		}

		return SmartRuleLexer.__ATN;
	}


	static DecisionsToDFA = SmartRuleLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}
