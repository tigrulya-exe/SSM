<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!-- Do not modify this file directly.  Instead, copy entries that you -->
<!-- wish to modify from this file into ssm-site.xml and change them -->
<!-- there.  If ssm-site.xml does not already exist, create it.      -->

<configuration>
  <property>
    <name>smart.server.rpc.address</name>
    <value>0.0.0.0:7042</value>
    <description>rpc server of SSM</description>
  </property>
  <!--
    For client side configuration, real hostname or IP is required.
    And if SSM HA mode is enabled, more than one Smart Server address
    can be specified with comma delimited.
    <property>
      <name>smart.server.rpc.address</name>
      <value>smart-server-hostname:rpc-port</value>
    </property>
  -->

  <property>
    <name>smart.ignore.dirs</name>
    <value></value>
    <description>
      SSM will completely ignore files under the given HDFS directory.
      For more than one directory, they should be separated by ",".
    </description>
  </property>

  <property>
    <name>smart.cover.dirs</name>
    <value></value>
    <description>
      SSM will only fetch files under the given HDFS directory.
      For more than one directory, they should be separated by ",".
      By default, all HDFS files are covered.
    </description>
  </property>

  <property>
    <name>smart.work.dir</name>
    <value>/system/ssm</value>
    <description>
      This HDFS directory is used as a work directory for SSM to store tmp files.
      The default path is "/system/ssm", and SSM will ignore HDFS inotify for
      files under the work directory. Only one directory can be set for this property.
    </description>
  </property>

  <property>
    <name>smart.client.concurrent.report.enabled</name>
    <value>true</value>
    <description>
      This property is used to enable/disable concurrent report for SmartClient.
      If it is enabled, SmartClient will connect to multiple configured smart
      servers concurrently, which is an optimization to find active smart server.
      Only active smart sever will respond to build successful connection. If
      report is successfully delivered to active smart server, attempting to
      connect to other smart servers will be canceled.
    </description>
  </property>

  <!--
  The above properties can take effect in SSM, and they can also be configured on
  client side for Smart Client to use, e.g., you can make the above configuration
  in $HADOOP_HOME/etc/hadoop/hdfs-site.xml.
  -->

  <!--
  The below properties can ONLY take effect in SSM.
  -->
  <property>
    <name>smart.dfs.enabled</name>
    <value>true</value>
    <description>
      By setting false, all SSM functions except rpc and RESTApi service will be disabled.
    </description>
  </property>

  <property>
    <name>hadoop.security.credential.provider.path</name>
    <value></value>
    <description>
      This property specifies jceks path which can store password of metastore by
      using alias 'smart.metastore.password'. An example is jceks://file/root/ssm.jceks.
      No path is provided by default, then the password configured in druid.xml will be
      used.
    </description>
  </property>

  <property>
    <name>smart.server.rpc.handler.count</name>
    <value>80</value>
    <description>number of handlers in rpc server</description>
  </property>

  <property>
    <name>smart.agent.port</name>
    <value>7048</value>
    <description>SmartAgent port</description>
  </property>

  <property>
    <name>smart.agent.master.port</name>
    <value>7051</value>
    <description>SmartAgent master port</description>
  </property>

  <property>
    <name>smart.namespace.fetcher.batch</name>
    <value>500</value>
    <description>Batch size of Namespace fetcher</description>
  </property>

  <property>
    <name>smart.namespace.fetcher.producers.num</name>
    <value>3</value>
    <description>Number of producers in namespace fetcher</description>
  </property>

  <property>
    <name>smart.namespace.fetcher.consumers.num</name>
    <value>6</value>
    <description>Number of consumers in namespace fetcher</description>
  </property>

  <property>
    <name>smart.rule.executors</name>
    <value>5</value>
    <description>Max number of rules that can be executed in parallel</description>
  </property>

  <property>
    <name>smart.cmdlet.executors</name>
    <value>10</value>
    <description>Max number of cmdlets that can be executed in parallel</description>
  </property>

  <property>
    <name>smart.dispatch.cmdlets.extra.num</name>
    <value>10</value>
    <description>The number of extra cmdlets dispatched by Smart Server</description>
  </property>

  <property>
    <name>smart.cmdlet.dispatchers</name>
    <value>3</value>
    <description>Max number of cmdlet dispatchers that work in parallel</description>
  </property>

  <property>
    <name>smart.cmdlet.mover.max.concurrent.blocks.per.srv.inst</name>
    <value>0</value>
    <description>
      Max number of file mover cmdlets that can be executed in parallel per SSM service.
      0 means unlimited.
    </description>
  </property>

  <property>
    <name>smart.action.move.throttle.mb</name>
    <value>0</value>
    <description>The throughput limit (MB) for SSM move overall</description>
  </property>

  <property>
    <name>smart.action.copy.throttle.mb</name>
    <value>0</value>
    <description>The throughput limit (MB) for SSM copy overall</description>
  </property>

  <property>
    <name>smart.action.ec.throttle.mb</name>
    <value>0</value>
    <description>The throughput limit (MB) for SSM EC overall</description>
  </property>

  <property>
    <name>smart.action.local.execution.disabled</name>
    <value>false</value>
    <description>
      The default false value means active smart server can also execute actions,
      like an agent. If it is set to true, active SSM server will NOT be able to
      execute actions. This configuration has no impact on standby smart server.
    </description>
  </property>

  <property>
    <name>smart.cmdlet.max.num.pending</name>
    <value>20000</value>
    <description>
      Maximum number of pending cmdlets in SSM server.
      Default value is 20000.
    </description>
  </property>

  <property>
    <name>smart.cmdlet.hist.max.num.records</name>
    <value>100000</value>
    <description>
      Maximum number of historic cmdlet records kept in SSM server.
      Oldest cmdlets will be deleted if exceeds the threshold.
    </description>
  </property>

  <property>
    <name>smart.cmdlet.hist.max.record.lifetime</name>
    <value>30day</value>
    <description>
      Maximum life time of historic cmdlet records kept in SSM server.
      Cmdlet record will be deleted from SSM server if exceeds the threshold.
      Valid time unit can be 'day', 'hour', 'min', 'sec'. The minimum update
      granularity is 5sec.
    </description>
  </property>

  <property>
    <name>smart.cmdlet.cache.batch</name>
    <value>600</value>
    <description>
      Maximum batch size of cmdlet batch insert.
    </description>
  </property>

  <property>
    <name>smart.copy.scheduler.base.sync.batch</name>
    <value>500</value>
    <description>
      Maximum batch size of copyscheduler base sync batch insert.
    </description>
  </property>

  <property>
    <name>smart.file.diff.max.num.records</name>
    <value>10000</value>
    <description>
      Maximum file diff records with useless state.
    </description>
  </property>

  <property>
    <name>smart.status.report.period</name>
    <value>10</value>
    <description>
      The status report period for actions. The time unit is millisecond.
    </description>
  </property>

  <property>
    <name>smart.status.report.period.multiplier</name>
    <value>50</value>
    <description>
      The report period multiplied by this multiplier defines largest report interval.
    </description>
  </property>

  <property>
    <name>smart.status.report.ratio</name>
    <value>0.2</value>
    <description>
      If the finished actions ratio equals or exceeds this value, status report will
      be triggered.
    </description>
  </property>

  <property>
    <name>smart.namespace.fetcher.ignore.unsuccessive.inotify.event</name>
    <value>false</value>
    <description>
      Skip fetch the entire namespace and only use available iNotify events to
      update namespace if true. NOTE: This may leads to some unpredictable
      consequences and should only be used for test.
    </description>
  </property>

  <property>
    <name>smart.cmdlet.dispatcher.log.disp.result</name>
    <value>false</value>
    <description>
      Log dispatch result for each cmdlet been dispatched.
    </description>
  </property>

  <property>
    <name>smart.cmdlet.dispatcher.log.disp.metrics.interval</name>
    <value>5000</value>
    <description>
      Time interval in millisecond to log statistic metrics of cmdlet dispatcher.
      If no cmdlet dispatched in the time interval, then no output for this interval.
      Disable the logger if equals 0.
    </description>
  </property>

  <property>
    <name>smart.compression.codec</name>
    <value>Zlib</value>
    <description>
      The default compression codec for SSM compression (Zlib, Lz4, Bzip2, snappy).
      User can also specify a codec in action arg, then this default setting will
      be overridden.
    </description>
  </property>

  <property>
    <name>smart.compression.max.split</name>
    <value>1000</value>
    <description>
      The max number of chunks split for compression.
    </description>
  </property>

  <property>
    <name>smart.compact.batch.size</name>
    <value>200</value>
    <description>
      The max number of small files to be compacted by per compact action.
    </description>
  </property>

  <property>
    <name>smart.compact.container.file.threshold.mb</name>
    <value>1024</value>
    <description>
      The max size of a container file in MB.
    </description>
  </property>

  <property>
    <name>smart.metastore.migration.liquibase.changelog.path</name>
    <value>db/changelog/changelog-root.xml</value>
    <description>
      Path to liquibase changelog root file.
    </description>
  </property>

  <property>
    <name>smart.ignore.path.templates</name>
    <value></value>
    <description>
      Comma-separated list of regex templates of HDFS paths to be completely ignored by SSM.
    </description>
  </property>

  <property>
    <name>smart.internal.path.templates</name>
    <value>.*/\..*,.*/__.*,.*_COPYING_.*</value>
    <description>
      Comma-separated list of regex templates of internal files to be completely ignored by SSM.
    </description>
  </property>

  <property>
    <name>smart.file.access.event.fetch.interval.ms</name>
    <value>1000</value>
    <description>
      The interval in milliseconds between access event fetches.
    </description>
  </property>

  <property>
    <name>smart.cached.file.fetch.interval.ms</name>
    <value>5000</value>
    <description>
      The interval in milliseconds between cached files fetches from HDFS.
    </description>
  </property>

  <property>
    <name>smart.namespace.fetch.interval.ms</name>
    <value>1</value>
    <description>
      The interval in milliseconds between namespace fetches from HDFS.
    </description>
  </property>

  <property>
    <name>smart.mover.scheduler.storage.report.fetch.interval.ms</name>
    <value>120000</value>
    <description>
      The interval in milliseconds between storage report fetches from HDFS DataNode in mover scheduler.
    </description>
  </property>

  <property>
    <name>smart.metastore.small-file.insert.batch.size</name>
    <value>200</value>
    <description>
      The max size of small file insert batch to the Metastore.
    </description>
  </property>

  <property>
    <name>smart.agent.master.ask.timeout.ms</name>
    <value>5000</value>
    <description>
      The max time in milliseconds to wait an answer from the SmartAgent master actor during action submission.
    </description>
  </property>

  <property>
    <name>smart.file.access.count.aggregation.interval.ms</name>
    <value>5000</value>
    <description>
      The interval in milliseconds that is covered by single second-granularity access count table.
    </description>
  </property>

  <property>
    <name>smart.sync.schedule.strategy</name>
    <value>UNORDERED</value>
    <description>
      Strategy of copying files during 'sync' rule. Possible values:
      FIFO - the files created/modified first will be scheduled for transfer first
      LIFO - the files created/modified last will be scheduled for transfer first
      UNORDERED - no guarantees of the file scheduling order
    </description>
  </property>

  <property>
    <name>smart.sync.file.equality.strategy</name>
    <value>CHECKSUM</value>
    <description>
      The strategy for checking whether the files with same relative path in the source and target clusters
      are equal during scheduling of the sync action.
      Possible values:
      FILE_LENGTH - equality check based on the file length. This strategy is fast alternative to
      comparing file contents/checksums, but have some corner cases when two different files with the same
      length but with different content are considered equal.
      CHECKSUM - equality check based on the file checksum. This strategy is more resource-intensive,
      but it doesn't return false positive results, like previous one.
    </description>
  </property>

  <property>
    <name>smart.rest.server.port</name>
    <value>8081</value>
    <description>SSM Rest Server port</description>
  </property>

  <property>
    <name>smart.client.report.tasks.timeout.ms</name>
    <value>2000</value>
    <description>
      Timeout in milliseconds for the successful file access report.
      Has an effect only if the 'smart.client.concurrent.report.enabled' option is set to true.
    </description>
  </property>

  <property>
    <name>smart.client.active.server.cache.path</name>
    <value>/tmp/active_smart_server</value>
    <description>
      Local filesystem path of the active Smart Server address file-based cache.
    </description>
  </property>

  <property>
    <name>smart.rest.server.security.enabled</name>
    <value>false</value>
    <description>
      Whether to enable SSM REST server security.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.spnego.enabled</name>
    <value>false</value>
    <description>
      Whether to enable SSM REST server SPNEGO authentication method support.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.kerberos.enabled</name>
    <value>false</value>
    <description>
      Whether to enable SSM REST server basic Kerberos authentication method support.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.predefined.enabled</name>
    <value>false</value>
    <description>
      Whether to enable SSM REST server basic authentication with users,
      predefined in the 'smart.rest.server.auth.predefined.users' option.
    </description>
  </property>

  <property>
    <name>smart.file.access.count.aggregator.failover.retry.count</name>
    <value>60</value>
    <description>
      Maximum number of attempts to save file access events
    </description>
  </property>

  <property>
    <name>smart.file.access.count.aggregator.failover</name>
    <value>SAVE_FAILED_WITH_RETRY</value>
    <description>
      Failover strategy for file access events aggregator. Possible values:
      FAIL - throw exception, no failover.
      SAVE_FAILED_WITH_RETRY - save all file access events that caused exception
      for later submission with max attempts less or equals than smart.access.count.aggregator.failover.retry.count
    </description>
  </property>

  <property>
    <name>smart.action.client.cache.ttl</name>
    <value>10m</value>
    <description>
      The minimum amount of time after the last access to the DFS client cache entry
      that must pass in order for the entry to be evicted.
      Should be in the format '[Amount][TimeUnit]', where TimeUnit is one
      of 'day' or 'd', 'hour' or 'h', 'min' or 'm', 'sec' or 's'.
    </description>
  </property>

  <property>
    <name>smart.rest.server.ssl.enabled</name>
    <value>false</value>
    <description>
      Whether to enable SSL support for the SSM REST server.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.ldap.enabled</name>
    <value>false</value>
    <description>
      Whether to enable SSM REST server basic LDAP authentication method support.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.ldap.search.base</name>
    <value></value>
    <description>
      Base LDAP distinguished name for search.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.ldap.user.search.base</name>
    <value></value>
    <description>
      Base LDAP distinguished name for user search.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.ldap.group.search.base</name>
    <value></value>
    <description>
      Base LDAP distinguished name for group search.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.ldap.user.attributes.name</name>
    <value>uid</value>
    <description>
      The name attribute of user LDAP object.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.ldap.user.object-classes</name>
    <value>person</value>
    <description>
      Comma-separated list of LDAP user entry objectClasses.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.ldap.user.search.scope</name>
    <value>ONE_LEVEL</value>
    <description>
      The scope of LDAP user search. Possible values:
      OBJECT - Search the named object
      ONE_LEVEL - Search one level of the named context
      SUBTREE - Search the entire subtree rooted at the named object
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.ldap.group.search.scope</name>
    <value>ONE_LEVEL</value>
    <description>
      The scope of LDAP group search. Possible values:
      OBJECT - Search the named object
      ONE_LEVEL - Search one level of the named context
      SUBTREE - Search the entire subtree rooted at the named object
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.ldap.user.attributes.password</name>
    <value>userPassword</value>
    <description>
      The password attribute of user LDAP object.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.ldap.group.object-class</name>
    <value>groupOfNames</value>
    <description>
      LDAP group entry objectClass.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.ldap.group.attributes.name</name>
    <value>cn</value>
    <description>
      The name attribute of group LDAP object.
    </description>
  </property>

  <property>
    <name>smart.rest.server.auth.ldap.auth.type</name>
    <value>BIND</value>
    <description>
      LDAP authentication type. Possible values:
      BIND: search user by specified filters and authenticate with found user's DN and provided password
      PASSWORD_COMPARE: search user by specified filters and use LDAP password compare operation
    </description>
  </property>
  <property>
    <name>smart.rest.server.auth.failures.logging.enabled</name>
    <value>true</value>
    <description>
      Whether to enable unsuccessful REST server auth attempts.
    </description>
  </property>
</configuration>
