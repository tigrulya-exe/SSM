openapi: 3.0.1
info:
  description: SSM REST service specification
  title: SSM API Documentation
  version: 1.0.0
servers:
- description: Local SSM server url
  url: http://localhost:8081
security:
- basicAuth: []
tags:
- name: Rules
- name: Cmdlets
- name: Actions
- name: Files
- name: Cluster
- name: Audit
- name: System
paths:
  /api/v2/rules:
    get:
      operationId: getRules
      parameters:
      - explode: true
        in: query
        name: pageRequest
        required: false
        schema:
          $ref: '#/components/schemas/PageRequest'
      - description: Sort field names prefixed with '-' for descending order
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RuleSort'
          type: array
      - description: "The object's text representation filter.  May contain special\
          \ characters like \"/\", \"'\", so should be encoded."
        in: query
        name: textRepresentationLike
        required: false
        schema:
          type: string
      - description: Time interval in which the entity was submitted
        in: query
        name: submissionTime
        required: false
        schema:
          $ref: '#/components/schemas/SubmissionTimeInterval'
      - description: List of rule states
        in: query
        name: ruleStates
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RuleState'
          type: array
      - description: Time interval in which the rule was activated
        in: query
        name: lastActivationTime
        required: false
        schema:
          $ref: '#/components/schemas/LastActivationTimeInterval'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rules'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data is filled incorrectly
        "401":
          description: Unauthorized
      summary: List all rules
      tags:
      - Rules
    post:
      operationId: addRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data is filled incorrectly
        "401":
          description: Unauthorized
      summary: Submit rule
      tags:
      - Rules
  /api/v2/rules/{id}:
    delete:
      operationId: deleteRule
      parameters:
      - description: Id of the resource
        in: path
        name: id
        required: true
        schema:
          description: Reference to 'id' field
          format: int64
          type: integer
      responses:
        "200":
          description: Rule has been removed
        "404":
          description: Rule with specified id not found
        "401":
          description: Unauthorized
      summary: Delete rule by id
      tags:
      - Rules
    get:
      operationId: getRule
      parameters:
      - description: Id of the resource
        in: path
        name: id
        required: true
        schema:
          description: Reference to 'id' field
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: OK
        "404":
          description: Rule with specified id not found
        "401":
          description: Unauthorized
      summary: Get rule by id
      tags:
      - Rules
  /api/v2/rules/{id}/start:
    post:
      operationId: startRule
      parameters:
      - description: Id of the resource
        in: path
        name: id
        required: true
        schema:
          description: Reference to 'id' field
          format: int64
          type: integer
      responses:
        "200":
          description: Rule has been started
        "404":
          description: Rule with specified id not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unsupported state transition
        "401":
          description: Unauthorized
      summary: Start or continue specified rule
      tags:
      - Rules
  /api/v2/rules/{id}/stop:
    post:
      operationId: stopRule
      parameters:
      - description: Id of the resource
        in: path
        name: id
        required: true
        schema:
          description: Reference to 'id' field
          format: int64
          type: integer
      responses:
        "200":
          description: Rule has been stopped
        "404":
          description: Rule with specified id not found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unsupported state transition
        "401":
          description: Unauthorized
      summary: Stop specified rule
      tags:
      - Rules
  /api/v2/cmdlets:
    get:
      operationId: getCmdlets
      parameters:
      - explode: true
        in: query
        name: pageRequest
        required: false
        schema:
          $ref: '#/components/schemas/PageRequest'
      - description: Sort field names prefixed with '-' for descending order
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/CmdletSort'
          type: array
      - description: "The object's text representation filter.  May contain special\
          \ characters like \"/\", \"'\", so should be encoded."
        in: query
        name: textRepresentationLike
        required: false
        schema:
          type: string
      - description: Time interval in which the entity was submitted
        in: query
        name: submissionTime
        required: false
        schema:
          $ref: '#/components/schemas/SubmissionTimeInterval'
      - description: Ids of the rules that cmdlets belong to
        in: query
        name: ruleIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
      - description: List of cmdlet states
        in: query
        name: states
        required: false
        schema:
          items:
            $ref: '#/components/schemas/CmdletState'
          type: array
      - description: Time interval in which the state of the cmdlet was changed
        in: query
        name: stateChangedTime
        required: false
        schema:
          $ref: '#/components/schemas/StateChangeTimeInterval'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cmdlets'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data is filled incorrectly
        "401":
          description: Unauthorized
      summary: List all cmdlets
      tags:
      - Cmdlets
    post:
      operationId: addCmdlet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitCmdletRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cmdlet'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data is filled incorrectly
        "401":
          description: Unauthorized
      summary: Submit cmdlet
      tags:
      - Cmdlets
  /api/v2/cmdlets/{id}:
    delete:
      operationId: deleteCmdlet
      parameters:
      - description: Id of the resource
        in: path
        name: id
        required: true
        schema:
          description: Reference to 'id' field
          format: int64
          type: integer
      responses:
        "200":
          description: Cmdlet has been removed
        "404":
          description: Cmdlet with specified id not found
        "401":
          description: Unauthorized
      summary: Delete cmdlet by id
      tags:
      - Cmdlets
    get:
      operationId: getCmdlet
      parameters:
      - description: Id of the resource
        in: path
        name: id
        required: true
        schema:
          description: Reference to 'id' field
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cmdlet'
          description: OK
        "404":
          description: Cmdlet with specified id not found
        "401":
          description: Unauthorized
      summary: Get cmdlet by id
      tags:
      - Cmdlets
  /api/v2/cmdlets/{id}/stop:
    post:
      operationId: stopCmdlet
      parameters:
      - description: Id of the resource
        in: path
        name: id
        required: true
        schema:
          description: Reference to 'id' field
          format: int64
          type: integer
      responses:
        "200":
          description: Cmdlet has been stopped
        "404":
          description: Cmdlet with specified id not found
        "401":
          description: Unauthorized
      summary: Stop specified cmdlet
      tags:
      - Cmdlets
  /api/v2/actions:
    get:
      operationId: getActions
      parameters:
      - explode: true
        in: query
        name: pageRequest
        required: false
        schema:
          $ref: '#/components/schemas/PageRequest'
      - description: Sort field names prefixed with '-' for descending order
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ActionSort'
          type: array
      - description: "The object's text representation filter.  May contain special\
          \ characters like \"/\", \"'\", so should be encoded."
        in: query
        name: textRepresentationLike
        required: false
        schema:
          type: string
      - description: Time interval in which the entity was submitted
        in: query
        name: submissionTime
        required: false
        schema:
          $ref: '#/components/schemas/SubmissionTimeInterval'
      - description: List of hosts on which the action is/was running
        in: query
        name: hosts
        required: false
        schema:
          items:
            type: string
          type: array
      - description: List of action states
        in: query
        name: states
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ActionState'
          type: array
      - description: List of action sources
        in: query
        name: sources
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ActionSource'
          type: array
      - description: Time interval in which the action was finished
        in: query
        name: completionTime
        required: false
        schema:
          $ref: '#/components/schemas/CompletionTimeInterval'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actions'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data is filled incorrectly
        "401":
          description: Unauthorized
      summary: List all actions
      tags:
      - Actions
    post:
      operationId: submitAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionInfo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data is filled incorrectly
        "401":
          description: Unauthorized
      summary: Submit action
      tags:
      - Actions
  /api/v2/actions/{id}:
    get:
      operationId: getAction
      parameters:
      - description: Id of the resource
        in: path
        name: id
        required: true
        schema:
          description: Reference to 'id' field
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
          description: OK
        "404":
          description: Action with specified id not found
        "401":
          description: Unauthorized
      summary: Get action by id
      tags:
      - Actions
  /api/v2/files/access-counts:
    get:
      operationId: getAccessCounts
      parameters:
      - explode: true
        in: query
        name: pageRequest
        required: false
        schema:
          $ref: '#/components/schemas/PageRequest'
      - description: Sort field names prefixed with '-' for descending order
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/HotFileSort'
          type: array
      - description: "The file path filter. May contain special characters like \"\
          /\", \"'\", so should be encoded."
        in: query
        name: pathLike
        required: false
        schema:
          type: string
      - description: Time interval in which the file was accessed
        in: query
        name: lastAccessedTime
        required: false
        schema:
          $ref: '#/components/schemas/LastAccessedTimeInterval'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileAccessCounts'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data is filled incorrectly
        "401":
          description: Unauthorized
      summary: List access counts of files
      tags:
      - Files
  /api/v2/files/cached:
    get:
      operationId: getCachedFiles
      parameters:
      - explode: true
        in: query
        name: pageRequest
        required: false
        schema:
          $ref: '#/components/schemas/PageRequest'
      - description: Sort field names prefixed with '-' for descending order
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/CachedFileSort'
          type: array
      - description: "The file path filter. May contain special characters like \"\
          /\", \"'\", so should be encoded."
        in: query
        name: pathLike
        required: false
        schema:
          type: string
      - description: Time interval in which the file was accessed
        in: query
        name: lastAccessedTime
        required: false
        schema:
          $ref: '#/components/schemas/LastAccessedTimeInterval'
      - description: Time interval in which the file was cached
        in: query
        name: cachedTime
        required: false
        schema:
          $ref: '#/components/schemas/CachedTimeInterval'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedFiles'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data is filled incorrectly
        "401":
          description: Unauthorized
      summary: List cached files
      tags:
      - Files
  /api/v2/cluster/nodes:
    get:
      operationId: getClusterNodes
      parameters:
      - explode: true
        in: query
        name: pageRequest
        required: false
        schema:
          $ref: '#/components/schemas/PageRequest'
      - description: Sort field names prefixed with '-' for descending order
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ClusterSort'
          type: array
      - description: Time interval in which node was registered in master
        in: query
        name: registrationTime
        required: false
        schema:
          $ref: '#/components/schemas/RegistrationTimeInterval'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNodes'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data is filled incorrectly
        "401":
          description: Unauthorized
      summary: List all cluster nodes
      tags:
      - Cluster
  /api/v2/audit/events:
    get:
      operationId: getAuditEvents
      parameters:
      - explode: true
        in: query
        name: pageRequest
        required: false
        schema:
          $ref: '#/components/schemas/PageRequest'
      - description: Sort field names prefixed with '-' for descending order
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AuditSort'
          type: array
      - description: Filter of the name of the user who performed the event
        in: query
        name: usernameLike
        required: false
        schema:
          type: string
      - description: Time interval in which the event occurred
        in: query
        name: eventTime
        required: false
        schema:
          $ref: '#/components/schemas/EventTimeInterval'
      - description: List of audit object types
        in: query
        name: objectTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AuditObjectType'
          type: array
      - description: Ids of the event objects
        in: query
        name: objectIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
      - description: List of audit operations
        in: query
        name: operations
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AuditOperation'
          type: array
      - description: List of audit event results
        in: query
        name: results
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AuditEventResult'
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditEvents'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data is filled incorrectly
        "401":
          description: Unauthorized
      summary: List all audit events
      tags:
      - Audit
  /api/v2/system/current-user:
    get:
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: OK
        "401":
          description: Unauthorized
      summary: Get current logged in user
      tags:
      - System
components:
  parameters:
    page-request:
      explode: true
      in: query
      name: pageRequest
      required: false
      schema:
        $ref: '#/components/schemas/PageRequest'
    rules-sort:
      description: Sort field names prefixed with '-' for descending order
      in: query
      name: sort
      required: false
      schema:
        items:
          $ref: '#/components/schemas/RuleSort'
        type: array
    text-representation-like:
      description: "The object's text representation filter.  May contain special\
        \ characters like \"/\", \"'\", so should be encoded."
      in: query
      name: textRepresentationLike
      required: false
      schema:
        type: string
    submission-time:
      description: Time interval in which the entity was submitted
      in: query
      name: submissionTime
      required: false
      schema:
        $ref: '#/components/schemas/SubmissionTimeInterval'
    rule-states:
      description: List of rule states
      in: query
      name: ruleStates
      required: false
      schema:
        items:
          $ref: '#/components/schemas/RuleState'
        type: array
    last-activation-time:
      description: Time interval in which the rule was activated
      in: query
      name: lastActivationTime
      required: false
      schema:
        $ref: '#/components/schemas/LastActivationTimeInterval'
    id:
      description: Id of the resource
      in: path
      name: id
      required: true
      schema:
        description: Reference to 'id' field
        format: int64
        type: integer
    cmdlets-sort:
      description: Sort field names prefixed with '-' for descending order
      in: query
      name: sort
      required: false
      schema:
        items:
          $ref: '#/components/schemas/CmdletSort'
        type: array
    rule-ids:
      description: Ids of the rules that cmdlets belong to
      in: query
      name: ruleIds
      required: false
      schema:
        items:
          format: int64
          type: integer
        type: array
    states:
      description: List of cmdlet states
      in: query
      name: states
      required: false
      schema:
        items:
          $ref: '#/components/schemas/CmdletState'
        type: array
    state-changed-time:
      description: Time interval in which the state of the cmdlet was changed
      in: query
      name: stateChangedTime
      required: false
      schema:
        $ref: '#/components/schemas/StateChangeTimeInterval'
    action-sort:
      description: Sort field names prefixed with '-' for descending order
      in: query
      name: sort
      required: false
      schema:
        items:
          $ref: '#/components/schemas/ActionSort'
        type: array
    hosts:
      description: List of hosts on which the action is/was running
      in: query
      name: hosts
      required: false
      schema:
        items:
          type: string
        type: array
    action-states:
      description: List of action states
      in: query
      name: states
      required: false
      schema:
        items:
          $ref: '#/components/schemas/ActionState'
        type: array
    sources:
      description: List of action sources
      in: query
      name: sources
      required: false
      schema:
        items:
          $ref: '#/components/schemas/ActionSource'
        type: array
    completion-time:
      description: Time interval in which the action was finished
      in: query
      name: completionTime
      required: false
      schema:
        $ref: '#/components/schemas/CompletionTimeInterval'
    hot-files-sort:
      description: Sort field names prefixed with '-' for descending order
      in: query
      name: sort
      required: false
      schema:
        items:
          $ref: '#/components/schemas/HotFileSort'
        type: array
    path-like:
      description: "The file path filter. May contain special characters like \"/\"\
        , \"'\", so should be encoded."
      in: query
      name: pathLike
      required: false
      schema:
        type: string
    last-accessed-time:
      description: Time interval in which the file was accessed
      in: query
      name: lastAccessedTime
      required: false
      schema:
        $ref: '#/components/schemas/LastAccessedTimeInterval'
    cached-files-sort:
      description: Sort field names prefixed with '-' for descending order
      in: query
      name: sort
      required: false
      schema:
        items:
          $ref: '#/components/schemas/CachedFileSort'
        type: array
    cached-time:
      description: Time interval in which the file was cached
      in: query
      name: cachedTime
      required: false
      schema:
        $ref: '#/components/schemas/CachedTimeInterval'
    cluster-sort:
      description: Sort field names prefixed with '-' for descending order
      in: query
      name: sort
      required: false
      schema:
        items:
          $ref: '#/components/schemas/ClusterSort'
        type: array
    registration-time:
      description: Time interval in which node was registered in master
      in: query
      name: registrationTime
      required: false
      schema:
        $ref: '#/components/schemas/RegistrationTimeInterval'
    audit-sort:
      description: Sort field names prefixed with '-' for descending order
      in: query
      name: sort
      required: false
      schema:
        items:
          $ref: '#/components/schemas/AuditSort'
        type: array
    username-like:
      description: Filter of the name of the user who performed the event
      in: query
      name: usernameLike
      required: false
      schema:
        type: string
    event-time:
      description: Time interval in which the event occurred
      in: query
      name: eventTime
      required: false
      schema:
        $ref: '#/components/schemas/EventTimeInterval'
    object-types:
      description: List of audit object types
      in: query
      name: objectTypes
      required: false
      schema:
        items:
          $ref: '#/components/schemas/AuditObjectType'
        type: array
    object-ids:
      description: Ids of the event objects
      in: query
      name: objectIds
      required: false
      schema:
        items:
          format: int64
          type: integer
        type: array
    operations:
      description: List of audit operations
      in: query
      name: operations
      required: false
      schema:
        items:
          $ref: '#/components/schemas/AuditOperation'
        type: array
    results:
      description: List of audit event results
      in: query
      name: results
      required: false
      schema:
        items:
          $ref: '#/components/schemas/AuditEventResult'
        type: array
  schemas:
    PageRequest:
      properties:
        limit:
          default: 10
          description: Maximum number of records in result set
          minimum: 1
          nullable: true
          type: integer
        offset:
          default: 0
          description: Offset of the first record to search from
          format: int64
          minimum: 0
          nullable: true
          type: integer
      title: PageRequest
      type: object
    RuleSort:
      description: Sort field names prefixed with '-' for descending order
      enum:
      - id
      - submitTime
      - lastCheckTime
      - checkedCount
      - generatedCmdlets
      - status
      - -id
      - -submitTime
      - -lastCheckTime
      - -checkedCount
      - -generatedCmdlets
      - -status
      title: RuleSort
      type: string
    RuleState:
      description: Current state of the rule
      enum:
      - ACTIVE
      - DISABLED
      title: RuleState
      type: string
    PageResponse:
      properties:
        total:
          description: Total number of objects
          format: int64
          type: integer
      required:
      - total
      title: PageResponse
      type: object
    Rule:
      example:
        submitTime: 1
        activationCount: 5
        textRepresentation: textRepresentation
        lastActivationTime: 2
        id: 6
        state: null
        cmdletsGenerated: 5
      properties:
        id:
          description: Rule id
          format: int64
          type: integer
        submitTime:
          description: UNIX timestamp (UTC) of the rule submission
          format: int64
          type: integer
        textRepresentation:
          description: Rule text representation
          type: string
        state:
          $ref: '#/components/schemas/RuleState'
        activationCount:
          description: Number of rule activations
          format: int64
          type: integer
        cmdletsGenerated:
          description: Number of generated cmdlets from this rule
          format: int64
          type: integer
        lastActivationTime:
          description: UNIX timestamp (UTC) of the last rule activation
          format: int64
          nullable: true
          type: integer
      required:
      - activationCount
      - cmdletsGenerated
      - id
      - state
      - submitTime
      - textRepresentation
      title: Rule
      type: object
    ErrorResponse:
      example:
        code: code
        message: message
        body: "{}"
      properties:
        code:
          description: Error code
          type: string
        message:
          description: Detailed error message
          type: string
        body:
          description: Additional information about the error
          type: object
      required:
      - code
      - message
      title: ErrorResponse
      type: object
    SubmitRuleRequest:
      example:
        rule: rule
      properties:
        rule:
          description: Rule text representation
          type: string
      required:
      - rule
      title: SubmitRuleRequest
      type: object
    CmdletSort:
      description: Sort field names prefixed with '-' for descending order
      enum:
      - id
      - ruleId
      - state
      - generateTime
      - stateChangedTime
      - -id
      - -ruleId
      - -state
      - -generateTime
      - -stateChangedTime
      title: CmdletSort
      type: string
    CmdletState:
      description: Current state of the cmdlet
      enum:
      - NOT_INITED
      - PENDING
      - SCHEDULED
      - DISPATCHED
      - EXECUTING
      - CANCELLED
      - DISABLED
      - FAILED
      - DONE
      title: CmdletState
      type: string
    Cmdlet:
      example:
        actionIds:
        - 5
        - 5
        stateChangedTime: 2
        textRepresentation: textRepresentation
        id: 6
        state: null
        ruleId: 1
        submissionTime: 5
      properties:
        id:
          description: Cmdlet id
          format: int64
          type: integer
        ruleId:
          description: Id of the rule that generated cmdlet
          format: int64
          nullable: true
          type: integer
        actionIds:
          description: List of the action ids belonging to the current cmdlet
          items:
            format: int64
            type: integer
          type: array
        state:
          $ref: '#/components/schemas/CmdletState'
        textRepresentation:
          description: Cmdlet text representation
          type: string
        submissionTime:
          description: UNIX timestamp (UTC) of the cmdlet submission
          format: int64
          type: integer
        stateChangedTime:
          description: UNIX timestamp (UTC) of the cmdlet state modification
          format: int64
          type: integer
      required:
      - actionIds
      - id
      - state
      - stateChangedTime
      - submissionTime
      - textRepresentation
      title: Cmdlet
      type: object
    SubmitCmdletRequest:
      example:
        cmdlet: cmdlet
      properties:
        cmdlet:
          description: Cmdlet text representation
          type: string
      required:
      - cmdlet
      title: SubmitCmdletRequest
      type: object
    ActionSort:
      description: Sort field names prefixed with '-' for descending order
      enum:
      - id
      - execHost
      - createTime
      - finishTime
      - status
      - source
      - -id
      - -execHost
      - -createTime
      - -finishTime
      - -status
      - -source
      title: ActionSort
      type: string
    ActionState:
      description: State of the action
      enum:
      - RUNNING
      - SUCCESSFUL
      - FAILED
      title: ActionState
      type: string
    ActionSource:
      description: Source of the action creation
      enum:
      - RULE
      - USER
      title: ActionSource
      type: string
    ActionInfo:
      example:
        completionTime: 5
        textRepresentation: textRepresentation
        execHost: execHost
        id: 6
        state: null
        source: null
        cmdletId: 1
        submissionTime: 5
      properties:
        id:
          description: Action id
          format: int64
          type: integer
        cmdletId:
          description: Id of the cmdlet this action belongs to
          format: int64
          type: integer
        textRepresentation:
          description: Action text representation
          type: string
        execHost:
          description: SSM host on which this action is running
          nullable: true
          type: string
        submissionTime:
          description: UNIX timestamp (UTC) of the action submission
          format: int64
          type: integer
        completionTime:
          description: UNIX timestamp (UTC) of the action completion
          format: int64
          nullable: true
          type: integer
        state:
          $ref: '#/components/schemas/ActionState'
        source:
          $ref: '#/components/schemas/ActionSource'
      required:
      - cmdletId
      - id
      - source
      - state
      - submissionTime
      - textRepresentation
      title: ActionInfo
      type: object
    SubmitActionRequest:
      example:
        action: action
      properties:
        action:
          description: Action text representation
          type: string
      required:
      - action
      title: SubmitActionRequest
      type: object
    Action:
      allOf:
      - $ref: '#/components/schemas/ActionInfo'
      - properties:
          log:
            description: Action log
            type: string
        type: object
      example:
        completionTime: 5
        log: log
        textRepresentation: textRepresentation
        execHost: execHost
        id: 0
        state: null
        source: null
        cmdletId: 6
        submissionTime: 1
      required:
      - cmdletId
      - id
      - source
      - state
      - submissionTime
      - textRepresentation
      title: Action
      type: object
    HotFileSort:
      description: Sort field names prefixed with '-' for descending order
      enum:
      - fid
      - path
      - access_count
      - -fid
      - -path
      - -access_count
      title: HotFilesSort
      type: string
    FileAccessInfo:
      example:
        path: path
        accessCount: 1
        lastAccessTime: 5
        id: 6
      properties:
        id:
          description: Id of the file
          format: int64
          type: integer
        path:
          description: Path of the file
          type: string
        accessCount:
          description: Number of accesses to the file
          format: int32
          type: integer
        lastAccessTime:
          description: UNIX timestamp (UTC) of the last file access
          format: int32
          type: integer
      required:
      - accessCount
      - id
      - lastAccessTime
      - path
      title: FileAccessInfo
      type: object
    CachedFileSort:
      description: Sort field names prefixed with '-' for descending order
      enum:
      - fid
      - path
      - accessCount
      - cachedTime
      - lastAccessTime
      - -fid
      - -path
      - -accessCount
      - -cachedTime
      - -lastAccessTime
      title: FilesSort
      type: string
    CachedFileInfo:
      example:
        path: path
        accessCount: 1
        lastAccessTime: 5
        id: 6
        cachedTime: 5
      properties:
        id:
          description: Id of the file
          format: int64
          type: integer
        path:
          description: Path of the file
          type: string
        accessCount:
          description: Number of accesses to the file
          format: int32
          type: integer
        cachedTime:
          description: UNIX timestamp (UTC) when the file was cached
          format: int32
          type: integer
        lastAccessTime:
          description: UNIX timestamp (UTC) of the last file access
          format: int32
          type: integer
      required:
      - accessCount
      - cachedTime
      - id
      - lastAccessTime
      - path
      title: CachedFileInfo
      type: object
    ClusterSort:
      description: Sort field names prefixed with '-' for descending order
      enum:
      - id
      - registrationTime
      - executors
      - status
      - -id
      - -registrationTime
      - -executors
      - -status
      title: ClusterSort
      type: string
    ClusterNode:
      example:
        registrationTime: 1
        executorType: null
        port: 6
        host: host
        cmdletsExecuted: 5
        id: id
        executorsCount: 5
      properties:
        id:
          description: id of the node
          type: string
        host:
          description: host on which the node is running
          type: string
        port:
          description: port to which the node is bound
          format: int32
          type: integer
        executorType:
          $ref: '#/components/schemas/ExecutorType'
        registrationTime:
          description: UNIX timestamp (UTC) of the node registration in master
          format: int64
          type: integer
        executorsCount:
          description: Number of cmdlet executors
          format: int32
          type: integer
        cmdletsExecuted:
          description: Number of executed cmdlets on this node
          format: int64
          type: integer
      required:
      - cmdletsExecuted
      - executorType
      - executorsCount
      - host
      - id
      - port
      - registrationTime
      title: ClusterNode
      type: object
    AuditSort:
      description: Sort field names prefixed with '-' for descending order
      enum:
      - id
      - username
      - timestamp
      - objectType
      - objectId
      - operation
      - result
      - -id
      - -username
      - -timestamp
      - -objectType
      - -objectId
      - -operation
      - -result
      title: AuditSort
      type: string
    AuditObjectType:
      description: Type of the audit object
      enum:
      - RULE
      - CMDLET
      title: AuditObjectType
      type: string
    AuditOperation:
      description: Operation of the audit event
      enum:
      - CREATE
      - DELETE
      - START
      - STOP
      title: AuditOperation
      type: string
    AuditEventResult:
      description: Result of the audit event
      enum:
      - SUCCESS
      - FAILURE
      title: AuditEventResult
      type: string
    AuditEvent:
      example:
        result: null
        id: 6
        operation: null
        objectId: 5
        username: username
        timestamp: 1
        objectType: null
      properties:
        id:
          description: Event id
          format: int64
          type: integer
        username:
          description: Name of the user that perform the action
          type: string
        timestamp:
          description: UNIX timestamp (UTC) of the event
          format: int64
          type: integer
        objectType:
          $ref: '#/components/schemas/AuditObjectType'
        objectId:
          description: Id of the corresponding object (rule or cmdlet)
          format: int64
          type: integer
        operation:
          $ref: '#/components/schemas/AuditOperation'
        result:
          $ref: '#/components/schemas/AuditEventResult'
      required:
      - id
      - objectId
      - objectType
      - operation
      - result
      - timestamp
      - username
      title: AuditEvent
      type: object
    UserInfo:
      example:
        name: name
      properties:
        name:
          description: Name of the user
          type: string
      required:
      - name
      title: UserInfo
      type: object
    ExecutorType:
      description: Type of the cmdlet executor
      enum:
      - LOCAL
      - REMOTE_SSM
      - AGENT
      title: ExecutorType
      type: string
    SubmissionTimeInterval:
      properties:
        submissionTimeFrom:
          description: UNIX timestamp (UTC) of the interval start
          format: int64
          minimum: 0
          nullable: true
          type: integer
        submissionTimeTo:
          description: UNIX timestamp (UTC) of the interval end
          format: int64
          minimum: 0
          nullable: true
          type: integer
      title: SubmissionTimeInterval
      type: object
    LastActivationTimeInterval:
      properties:
        lastActivationTimeFrom:
          description: UNIX timestamp (UTC) of the interval start
          format: int64
          minimum: 0
          nullable: true
          type: integer
        lastActivationTimeTo:
          description: UNIX timestamp (UTC) of the interval end
          format: int64
          minimum: 0
          nullable: true
          type: integer
      title: LastActivationTimeInterval
      type: object
    Rules:
      allOf:
      - $ref: '#/components/schemas/PageResponse'
      - properties:
          items:
            description: List of rules
            items:
              $ref: '#/components/schemas/Rule'
            type: array
        type: object
      example:
        total: 0
        items:
        - submitTime: 1
          activationCount: 5
          textRepresentation: textRepresentation
          lastActivationTime: 2
          id: 6
          state: null
          cmdletsGenerated: 5
        - submitTime: 1
          activationCount: 5
          textRepresentation: textRepresentation
          lastActivationTime: 2
          id: 6
          state: null
          cmdletsGenerated: 5
      title: Rules
    StateChangeTimeInterval:
      properties:
        stateChangedTimeFrom:
          description: UNIX timestamp (UTC) of the interval start
          format: int64
          minimum: 0
          nullable: true
          type: integer
        stateChangedTimeTo:
          description: UNIX timestamp (UTC) of the interval end
          format: int64
          minimum: 0
          nullable: true
          type: integer
      title: StateChangeTimeInterval
      type: object
    Cmdlets:
      allOf:
      - $ref: '#/components/schemas/PageResponse'
      - properties:
          items:
            description: List of cmdlets
            items:
              $ref: '#/components/schemas/Cmdlet'
            type: array
        type: object
      example:
        total: 0
        items:
        - actionIds:
          - 5
          - 5
          stateChangedTime: 2
          textRepresentation: textRepresentation
          id: 6
          state: null
          ruleId: 1
          submissionTime: 5
        - actionIds:
          - 5
          - 5
          stateChangedTime: 2
          textRepresentation: textRepresentation
          id: 6
          state: null
          ruleId: 1
          submissionTime: 5
      title: Cmdlets
    CompletionTimeInterval:
      properties:
        completionTimeFrom:
          description: UNIX timestamp (UTC) of the interval start
          format: int64
          minimum: 0
          nullable: true
          type: integer
        completionTimeTo:
          description: UNIX timestamp (UTC) of the interval end
          format: int64
          minimum: 0
          nullable: true
          type: integer
      title: CompletionTimeInterval
      type: object
    Actions:
      allOf:
      - $ref: '#/components/schemas/PageResponse'
      - properties:
          items:
            description: List of actions
            items:
              $ref: '#/components/schemas/ActionInfo'
            type: array
        type: object
      example:
        total: 0
        items:
        - completionTime: 5
          textRepresentation: textRepresentation
          execHost: execHost
          id: 6
          state: null
          source: null
          cmdletId: 1
          submissionTime: 5
        - completionTime: 5
          textRepresentation: textRepresentation
          execHost: execHost
          id: 6
          state: null
          source: null
          cmdletId: 1
          submissionTime: 5
      title: Actions
    LastAccessedTimeInterval:
      properties:
        lastAccessedTimeFrom:
          description: UNIX timestamp (UTC) of the interval start
          format: int64
          minimum: 0
          nullable: true
          type: integer
        lastAccessedTimeTo:
          description: UNIX timestamp (UTC) of the interval end
          format: int64
          minimum: 0
          nullable: true
          type: integer
      title: LastAccessedTimeInterval
      type: object
    FileAccessCounts:
      allOf:
      - $ref: '#/components/schemas/PageResponse'
      - properties:
          items:
            description: List of files
            items:
              $ref: '#/components/schemas/FileAccessInfo'
            type: array
        type: object
      example:
        total: 0
        items:
        - path: path
          accessCount: 1
          lastAccessTime: 5
          id: 6
        - path: path
          accessCount: 1
          lastAccessTime: 5
          id: 6
      title: FileAccessCounts
    CachedTimeInterval:
      properties:
        cachedTimeFrom:
          description: UNIX timestamp (UTC) of the interval start
          format: int64
          minimum: 0
          nullable: true
          type: integer
        cachedTimeTo:
          description: UNIX timestamp (UTC) of the interval end
          format: int64
          minimum: 0
          nullable: true
          type: integer
      title: CachedTimeInterval
      type: object
    CachedFiles:
      allOf:
      - $ref: '#/components/schemas/PageResponse'
      - properties:
          items:
            description: List of files
            items:
              $ref: '#/components/schemas/CachedFileInfo'
            type: array
        type: object
      example:
        total: 0
        items:
        - path: path
          accessCount: 1
          lastAccessTime: 5
          id: 6
          cachedTime: 5
        - path: path
          accessCount: 1
          lastAccessTime: 5
          id: 6
          cachedTime: 5
      title: CachedFiles
    RegistrationTimeInterval:
      properties:
        registrationTimeFrom:
          description: UNIX timestamp (UTC) of the interval start
          format: int64
          minimum: 0
          nullable: true
          type: integer
        registrationTimeTo:
          description: UNIX timestamp (UTC) of the interval end
          format: int64
          minimum: 0
          nullable: true
          type: integer
      title: RegistrationTimeInterval
      type: object
    ClusterNodes:
      allOf:
      - $ref: '#/components/schemas/PageResponse'
      - properties:
          items:
            description: List of SSM cluster nodes
            items:
              $ref: '#/components/schemas/ClusterNode'
            type: array
        type: object
      example:
        total: 0
        items:
        - registrationTime: 1
          executorType: null
          port: 6
          host: host
          cmdletsExecuted: 5
          id: id
          executorsCount: 5
        - registrationTime: 1
          executorType: null
          port: 6
          host: host
          cmdletsExecuted: 5
          id: id
          executorsCount: 5
      title: ClusterNodes
    EventTimeInterval:
      properties:
        timestampFrom:
          description: UNIX timestamp (UTC) of the interval start
          format: int64
          minimum: 0
          nullable: true
          type: integer
        timestampTo:
          description: UNIX timestamp (UTC) of the interval end
          format: int64
          minimum: 0
          nullable: true
          type: integer
      title: EventTimeInterval
      type: object
    AuditEvents:
      allOf:
      - $ref: '#/components/schemas/PageResponse'
      - properties:
          items:
            description: List of audit events
            items:
              $ref: '#/components/schemas/AuditEvent'
            type: array
        type: object
      example:
        total: 0
        items:
        - result: null
          id: 6
          operation: null
          objectId: 5
          username: username
          timestamp: 1
          objectType: null
        - result: null
          id: 6
          operation: null
          objectId: 5
          username: username
          timestamp: 1
          objectType: null
      title: AuditEvents
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
